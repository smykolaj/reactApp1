// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Context;

#nullable disable

namespace SampleFullstack.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20240814132416_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Project.Models.AppUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUser");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            Email = "a@a.com",
                            IsAdmin = true,
                            Login = "admin",
                            Password = "admin",
                            RefreshToken = "",
                            RefreshTokenExp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salt = ""
                        });
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Property<long>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            IdCategory = 1L,
                            CategoryName = "Business"
                        },
                        new
                        {
                            IdCategory = 2L,
                            CategoryName = "Education"
                        });
                });

            modelBuilder.Entity("Project.Models.Company", b =>
                {
                    b.Property<long>("IdCompany")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Krs")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.HasKey("IdCompany");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Project.Models.Contract", b =>
                {
                    b.Property<long>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("ContinuedSupportYears")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("FullPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("IdCompany")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdIndividual")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSoftware")
                        .HasColumnType("bigint");

                    b.Property<long>("IdVersion")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdContract");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdIndividual");

                    b.HasIndex("IdSoftware");

                    b.HasIndex("IdVersion");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Project.Models.Discount", b =>
                {
                    b.Property<long>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Value")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("IdDiscount");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            IdDiscount = 1L,
                            Name = "Summer Sale",
                            Offer = "15% off",
                            TimeEnd = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStart = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 15.0m
                        },
                        new
                        {
                            IdDiscount = 2L,
                            Name = "Winter Sale",
                            Offer = "25% off",
                            TimeEnd = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStart = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 25.0m
                        });
                });

            modelBuilder.Entity("Project.Models.Individual", b =>
                {
                    b.Property<long>("IdIndividual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.HasKey("IdIndividual");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("Project.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdContract")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdContract");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Models.Software", b =>
                {
                    b.Property<long>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("IdCategory")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdSoftware");

                    b.HasIndex("IdCategory");

                    b.ToTable("Softwares");

                    b.HasData(
                        new
                        {
                            IdSoftware = 1L,
                            Description = "A comprehensive business management software",
                            IdCategory = 1L,
                            Name = "Business Suite",
                            Price = 5000.00m
                        },
                        new
                        {
                            IdSoftware = 2L,
                            Description = "An interactive educational platform",
                            IdCategory = 2L,
                            Name = "Education Hub",
                            Price = 3000.00m
                        });
                });

            modelBuilder.Entity("Project.Models.Version", b =>
                {
                    b.Property<long>("IdVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdSoftware")
                        .HasColumnType("bigint");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdVersion");

                    b.HasIndex("IdSoftware");

                    b.ToTable("Versions");

                    b.HasData(
                        new
                        {
                            IdVersion = 1L,
                            Comments = "Initial release",
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdSoftware = 1L,
                            VersionNumber = "1.0"
                        },
                        new
                        {
                            IdVersion = 2L,
                            Comments = "Major update",
                            Date = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdSoftware = 2L,
                            VersionNumber = "2.0"
                        },
                        new
                        {
                            IdVersion = 3L,
                            Comments = "Minor update",
                            Date = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdSoftware = 2L,
                            VersionNumber = "2.1"
                        });
                });

            modelBuilder.Entity("Project.Models.Contract", b =>
                {
                    b.HasOne("Project.Models.Company", "Company")
                        .WithMany("Contracts")
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Project.Models.Individual", "Individual")
                        .WithMany("Contracts")
                        .HasForeignKey("IdIndividual")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Project.Models.Software", "Software")
                        .WithMany("Contracts")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.Models.Version", "Version")
                        .WithMany("Contracts")
                        .HasForeignKey("IdVersion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Individual");

                    b.Navigation("Software");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Project.Models.Payment", b =>
                {
                    b.HasOne("Project.Models.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("IdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Project.Models.Software", b =>
                {
                    b.HasOne("Project.Models.Category", "Category")
                        .WithMany("Softwares")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Models.Version", b =>
                {
                    b.HasOne("Project.Models.Software", "Software")
                        .WithMany("Versions")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Navigation("Softwares");
                });

            modelBuilder.Entity("Project.Models.Company", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Project.Models.Contract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Project.Models.Individual", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Project.Models.Software", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Project.Models.Version", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
